{% extends "base.njk" %}

{% block metaStuff%}
	<title>Home</title>
	<link href="gift-ee.css", type="text/css", rel="stylesheet">
{% endblock %}

{% block main%}
<section class="main-content content-1">
	<h6>About this tool</h6>
	<h1>Giftee</h1>
	<p>
		Giftee is a social media-esque gift list managing website. Instead of keeping track of 
		your multiple online store's gift lists, like amazon, you can place them in one easy to 
		manage place!
	</p>
	<h3>Why did you make this?</h3>
	<p>
		I got tired of managing my own gift lists across multiple online stores aswell 
		as online stores that didnt have their own wish lists. I also saw it as an opportunity to be 
		able to share your gift list to friends and family with all the
		necessary information pertaining to that item in your gift list 
	</p>
</section>
<section class="main-content content-2">
	<h1>Try it out!</h1>
	<h3>Add a gift to your gift list</h3>
	<p>Omitted attributes will not be present for other users to see</p>
	<!-- add gift -->
	<div id="add-gift">
		<div id="gift-top"></div>
		<form id="add-gift-form">
			<div class="input-group">
				<label>ITEM NAME</label>
				<input type="text" class="input-name" name="itemName" placeholder="New Item Name">
			</div>
			<div class="input-group">
				<label>STORE LINK</label>
				<input type="text" class="input-name" name="storeLink" placeholder="New Store Link">
			</div>
			<div class="input-group">
				<label>PRICE</label>
				<input type="text" class="input-name" name="price" placeholder="New Price">
			</div>
			<div class="input-group">
				<label>QUANTITY</label>
				<input type="text" class="input-name" name="quantity" placeholder="New Quanity">
			</div>
			<div class="input-group">
				<label>SIZE</label>
				<input type="text" class="input-name" name="size" placeholder="New Size">
			</div>
			<button id="add-gift-btn" type="button" onclick="addGift(this.form)">Add Gift</button>
		</form>
		<div id="gift-bottom">Add Gift</div>
	</div>
</section>
<section class="main-content content-3">
	<h1>This is what YOU will see</h1>
	<h3>You can edit and remove gifts that are in your private gift list</h3>
	<!-- PRIVATE gift list -->
	<div class="gift-list gift-list-private">
		<!-- gift 1 -->
		<div class="gift gift-private">
			<i class="fas fa-eye openGiftButton"></i>
			<h2>RTX 3090</h2>
			<div class="gift-content gift-content-private">
				<form class="gift-form gift-form-private">
					<div class="input-group">
						<label>ITEM NAME</label>
						<input type="text" class="input-name" placeholder="New Item Name" value="RTX 3090">
					</div>
					<div class="input-group">
						<label>STORE LINK</label>
						<input type="text" class="input-name" placeholder="New Store Link" value="https://www.nvidia.com/en-us/geforce/graphics-cards/30-series/rtx-3090/">
					</div>
					<div class="input-group">
						<label>PRICE</label>
						<input type="text" class="input-name" placeholder="New Price" value="1499.00">
					</div>
					<div class="input-group">
						<label>QUANTITY</label>
						<input type="text" class="input-name" placeholder="New Quanity" value="1">
					</div>
					<div class="input-group">
						<label>SIZE</label>
						<input type="text" class="input-name" placeholder="New Size">
					</div>
					<button type="button" onclick="applyChanges(0, this.form)">Apply Changes</button>
					<button type="button">Delete</button>
				</form>
			</div>
		</div>
	</div>
</section>
<section class="main-content conent-4">
	<h1>This is what everyone else will see</h1>
	<!-- PUBLIC gift list -->
	<div class="gift-list gift-list-public">
		<div class="gift gift-public">
			<i class="fas fa-eye openGiftButton"></i>
			<h2> RTX 3090</h2>
			<div class="gift-content gift-content-public">
				<a class="public-store-link" href="https://www.nvidia.com/en-us/geforce/graphics-cards/30-series/rtx-3090/" target="_blank">STORE LINK</a>
				<div class="input-group">
					<label>PRICE</label>
					<input type="text" class="input-name" value="1499.99" readonly>
				</div>
				<div class="input-group">
					<label>QUANTITY</label>
					<input type="text" class="input-name" value="1" readonly>
				</div>
				<div class="input-group">
					<label>SIZE</label>
					<input type="text" class="input-name" placeholder="N/A" readonly>
				</div>
			</div>
		</div>
	</div>
</section>
<!-- footer -->
<footer>
	<div id="sub-footer">
		<h1>Giftee</h1>
		<h5>2020-2020</h5>
		<div id="footer-content-container">
			<div class="footer-content footer-content-1">
				<h3>Technologies used</h3>
				<p>Javascript</p>
				<p>Nunjucks</p>
				<p>Heroku</p>
				<p>HTML5</p>
				<p>CSS3</p>
			</div>
			<div class="footer-content footer-content-2">
				<h3>Source code</h3>
				<a href="https://github.com/AGuyNamedC-Los/gift-ee" target="_blank"><i class="fab fa-github-square"></i></a>
			</div>
			<div class="footer-content footer-content-2">
				<h3>More projects</h3>
				<a href="https://carlos-castillo-portfolio.herokuapp.com/#slide-2" target="_blank"><img src="" alt="bitmoji"></a>
				<a href="https://github.com/AGuyNamedC-Los" target="_blank"><i class="fab fa-github-square"></i></a>
			</div>
		</div>
	</div>
</footer>
{% endblock %}

{% block script %}
<script>
	var privateGiftList = document.getElementsByClassName("gift-list-private")[0];
	var privateGifts = privateGiftList.getElementsByClassName("gift-private");
	var publicGiftList = document.getElementsByClassName("gift-list-public")[0];
	var publicGifts = publicGiftList.getElementsByClassName("gift-public");

	// to expand the contents of each item in the private and public gift lists
	for(i = 0; i < privateGifts.length; i++) {
		let index = i;
		privateGifts[i].getElementsByClassName("openGiftButton")[0].addEventListener("click", () => openGift(index, "private"));
		publicGifts[i].getElementsByClassName("openGiftButton")[0].addEventListener("click", () => openGift(index, "public"));
	}
	// to open the add gift form
	document.getElementById("gift-bottom").addEventListener("click", () => expandAddGiftForm());

	function openGift(index, privacy) {
		let giftContent = (privacy === "private") ? privateGifts[index].getElementsByClassName("gift-content")[0] : publicGifts[index].getElementsByClassName("gift-content")[0];
		let currGift = (privacy === "private") ? privateGifts[index] : publicGifts[index];
		let giftContentHeight = giftContent.scrollHeight;
		let currGiftHeight = currGift.scrollHeight;
		currGift.style.height = currGiftHeight;

		if(giftContent.style.visibility === "visible") {   // close the form
			let newHeight = currGiftHeight - giftContentHeight;
			giftContent.style.transition = "0s";
			giftContent.style.opacity = 0;
			giftContent.style.visibility = "hidden";
			currGift.style.height = `${newHeight}px`;
		} else {    // open the form
			let newHeight = currGiftHeight;
			currGift.style.height = `${newHeight}px`;
			giftContent.style.transition = "2s ease";
			giftContent.style.opacity = 1;
			giftContent.style.visibility = "visible";
		}
	}

	function expandAddGiftForm() {
		let giftForm = document.getElementById("add-gift-form");

		if(giftForm.style.visibility === "visible") {
			giftForm.style.position = "absolute";
			giftForm.style.visibility = "hidden";
			giftForm.style.transition = "0s";
			giftForm.style.opacity = 0;
		} else {
			giftForm.style.position = "static";
			giftForm.style.visibility = "visible";
			giftForm.style.transition = "2s";
			giftForm.style.opacity = 1;
		}
	}
	
	function addGift(form){
		let inputFields = [];
		inputFields.length = 0;
		let formInputs = form.children;
		let itemNameInput = formInputs[0].getElementsByTagName("input")[0];

		if(itemNameInput.value == "") {
			console.log("must include gift name!");
			itemNameInput.style.borderColor = "red";
			return;
		}

		inputFields = ({
			itemName: formInputs[0].getElementsByTagName("input")[0].value,
			storeLink: formInputs[1].getElementsByTagName("input")[0].value,
			price: formInputs[2].getElementsByTagName("input")[0].value,
			quantity: formInputs[3].getElementsByTagName("input")[0].value,
			size: formInputs[4].getElementsByTagName("input")[0].value
		});

		addToPrivateList(inputFields);
		addToPublicList(inputFields);
	}

	// creating appropriate elements to append to the user's private gift list
	function parseInputFields(privacy, inputFields) {
		let newInputFields = [];

		if(privacy == "private") {
			for (let key in inputFields) {
				let userInput = inputFields[key];
				newInputFields.push(`<div class="input-group">
					<label>${key}</label>
					<input type="text" class="input-name" placeholder="New ${key}" value="${userInput}">
				</div>`);
			}
		} else {
			for (let key in inputFields) {
				let userInput = inputFields[key];
				newInputFields.push(`<div class="input-group">
					<label>${key}</label>
					<input type="text" class="input-name" placeholder="N/A" name="${key}" value="${(userInput == "") ? "N/A" : userInput}" readonly>
				</div>`);
			}
		}

		return newInputFields;
	}

	function addToPrivateList(inputFields) {
		let newInputFields = parseInputFields("private", inputFields);
		let currGiftIndex = privateGifts.length;

		if(privateGifts.length < 5) {
			let newGift = `                    
				<div class="gift gift-private">
					<i class="fas fa-eye openGiftButton"></i>
					<h2>${inputFields.itemName}</h2>
					<div class="gift-content gift-content-private">
						<form class="gift-form gift-form-private">
							${newInputFields[0]}
							${newInputFields[1]}
							${newInputFields[2]}
							${newInputFields[3]}
							${newInputFields[4]}
							<button type="button" onclick="applyChanges(${currGiftIndex}, this.form)">Apply Changes</button>
							<button type="button">Delete</button>
						</form>
					</div>
				</div>`;
			privateGiftList.insertAdjacentHTML("beforeend", newGift);
			// getting the button of the recently added gift and adding an event listener
			let giftButton = privateGifts[currGiftIndex].getElementsByClassName("openGiftButton")[0];
			let applyChangesButton = privateGifts[currGiftIndex].getElementsByTagName("button")[0];
			giftButton.addEventListener("click", () => openGift(currGiftIndex, "private"));
			// applyChangesButton.addEventListener("click", () => applyChanges(lastIndex, this.form));
		}

	}

	function addToPublicList(inputFields) {
		let newInputFields = parseInputFields("public", inputFields);

		if(publicGifts.length < 5) {
			let newGift = `                    
				<div class="gift gift-public">
					<i class="fas fa-eye openGiftButton"></i>
					<h2>${inputFields.itemName}</h2>
					<div class="gift-content gift-content-public">
						<a class="public-store-link" href="${inputFields[1]}" target="_blank">STORE LINK</a>
						${newInputFields[2]}
						${newInputFields[3]}
						${newInputFields[4]}
					</div>
				</div>`;
			publicGiftList.insertAdjacentHTML("beforeend", newGift);
		}
		let lastIndex = publicGifts.length-1;
		let giftButton = publicGifts[lastIndex].getElementsByClassName("openGiftButton")[0];
		giftButton.addEventListener("click", () => openGift(lastIndex, "public"));
	}

	function expandGift(index, e) {
		// let giftContent = document.getElementsByClassName("gift-content")[index];
		let giftContent = e.currentTarget.nextElementSibling;

		if(giftContent.style.visibility === "visible") {
			giftContent.style.position = "absolute";
			giftContent.style.visibility = "hidden";
			giftContent.style.transition = "0s";
			giftContent.style.opacity = 0;
		} else {
			giftContent.style.position = "static";
			giftContent.style.visibility = "visible";
			giftContent.style.transition = "2s";
			giftContent.style.opacity = 1;
		}
	}

	function applyChanges(index, form) {
		let inputFields = [];
		inputFields.length = 0;
		let formInputs = form.children;
		let itemNameInput = formInputs[0].getElementsByTagName("input")[0];

		if(itemNameInput.value == "") {
			itemNameInput.style.borderColor = "red";
			return;
		}
		itemNameInput.style.borderColor = "";   // reset the border color

		// get current input fields from the private gift's input fields
		inputFields = ({
			itemName: formInputs[0].getElementsByTagName("input")[0].value,
			storeLink: formInputs[1].getElementsByTagName("input")[0].value,
			price: formInputs[2].getElementsByTagName("input")[0].value,
			quantity: formInputs[3].getElementsByTagName("input")[0].value,
			size: formInputs[4].getElementsByTagName("input")[0].value
		});
		privateGifts[index].getElementsByTagName("h2")[0].innerHTML = inputFields.itemName; // change private gift's name

		// get the fields from the gift that is public to be changed
		let publicGiftItemName = publicGifts[index].getElementsByTagName("h2")[0];
		let publicGiftStoreLink = publicGifts[index].getElementsByClassName("public-store-link")[0];
		let publicGiftPrice = publicGifts[index].getElementsByClassName("input-group")[0].getElementsByTagName("input")[0];
		let publicGiftQuantity = publicGifts[index].getElementsByClassName("input-group")[1].getElementsByTagName("input")[0];
		let publicGiftSize = publicGifts[index].getElementsByClassName("input-group")[2].getElementsByTagName("input")[0];

		publicGiftItemName.innerHTML = inputFields.itemName;
		publicGiftStoreLink.href = inputFields.storeLink;
		publicGiftPrice.value = inputFields.price;
		publicGiftQuantity.value = inputFields.quantity;
		publicGiftSize.value = inputFields.size;
	}
</script>
{% endblock %}